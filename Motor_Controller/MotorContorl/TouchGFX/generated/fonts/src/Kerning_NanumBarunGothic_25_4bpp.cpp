#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_NanumBarunGothic_25_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0046, -1 },  // (First char = [0x0046, cid39], Second char = [0x0041, cid34], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, cid49], Second char = [0x0041, cid34], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, cid53], Second char = [0x0041, cid34], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, cid55], Second char = [0x0041, cid34], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, cid56], Second char = [0x0041, cid34], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, cid58], Second char = [0x0041, cid34], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, cid34], Second char = [0x0043, cid36], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, cid36], Second char = [0x0043, cid36], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, cid44], Second char = [0x0043, cid36], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, cid45], Second char = [0x0043, cid36], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, cid53], Second char = [0x0043, cid36], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, cid34], Second char = [0x0047, cid40], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, cid36], Second char = [0x0047, cid40], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, cid44], Second char = [0x0047, cid40], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, cid45], Second char = [0x0047, cid40], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, cid53], Second char = [0x0047, cid40], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, cid57], Second char = [0x0047, cid40], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, cid58], Second char = [0x0047, cid40], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, cid34], Second char = [0x004F, cid48], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, cid36], Second char = [0x004F, cid48], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, cid44], Second char = [0x004F, cid48], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, cid45], Second char = [0x004F, cid48], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, cid53], Second char = [0x004F, cid48], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, cid34], Second char = [0x0051, cid50], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, cid36], Second char = [0x0051, cid50], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, cid44], Second char = [0x0051, cid50], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, cid45], Second char = [0x0051, cid50], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, cid53], Second char = [0x0051, cid50], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, cid34], Second char = [0x0054, cid53], Kerning dist = -2)
    { 0x0042, -1 },  // (First char = [0x0042, cid35], Second char = [0x0054, cid53], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, cid37], Second char = [0x0054, cid53], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, cid45], Second char = [0x0054, cid53], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, cid48], Second char = [0x0054, cid53], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, cid50], Second char = [0x0054, cid53], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, cid51], Second char = [0x0054, cid53], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, cid52], Second char = [0x0054, cid53], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, cid45], Second char = [0x0055, cid54], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, cid34], Second char = [0x0056, cid55], Kerning dist = -1)
    { 0x0046,  1 },  // (First char = [0x0046, cid39], Second char = [0x0056, cid55], Kerning dist = 1)
    { 0x004C, -2 },  // (First char = [0x004C, cid45], Second char = [0x0056, cid55], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, cid34], Second char = [0x0057, cid56], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, cid45], Second char = [0x0057, cid56], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, cid37], Second char = [0x0058, cid57], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, cid34], Second char = [0x0059, cid58], Kerning dist = -2)
    { 0x0042, -1 },  // (First char = [0x0042, cid35], Second char = [0x0059, cid58], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, cid37], Second char = [0x0059, cid58], Kerning dist = -1)
    { 0x0046,  1 },  // (First char = [0x0046, cid39], Second char = [0x0059, cid58], Kerning dist = 1)
    { 0x004C, -2 },  // (First char = [0x004C, cid45], Second char = [0x0059, cid58], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, cid48], Second char = [0x0059, cid58], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, cid37], Second char = [0x005A, cid59], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, cid53], Second char = [0x005A, cid59], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, cid55], Second char = [0x005A, cid59], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, cid56], Second char = [0x005A, cid59], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, cid49], Second char = [0x0061, cid66], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, cid53], Second char = [0x0061, cid66], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, cid55], Second char = [0x0061, cid66], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, cid56], Second char = [0x0061, cid66], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, cid58], Second char = [0x0061, cid66], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, cid66], Second char = [0x0062, cid67], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, cid49], Second char = [0x0063, cid68], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, cid53], Second char = [0x0063, cid68], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, cid55], Second char = [0x0063, cid68], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, cid56], Second char = [0x0063, cid68], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, cid58], Second char = [0x0063, cid68], Kerning dist = -1)
    { 0x006C, -1 },  // (First char = [0x006C, cid77], Second char = [0x0063, cid68], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, cid83], Second char = [0x0063, cid68], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, cid53], Second char = [0x0064, cid69], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, cid55], Second char = [0x0064, cid69], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, cid56], Second char = [0x0064, cid69], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, cid58], Second char = [0x0064, cid69], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, cid83], Second char = [0x0064, cid69], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, cid49], Second char = [0x0065, cid70], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, cid53], Second char = [0x0065, cid70], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, cid55], Second char = [0x0065, cid70], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, cid56], Second char = [0x0065, cid70], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, cid58], Second char = [0x0065, cid70], Kerning dist = -1)
    { 0x006C, -1 },  // (First char = [0x006C, cid77], Second char = [0x0065, cid70], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, cid83], Second char = [0x0065, cid70], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, cid53], Second char = [0x0067, cid72], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, cid55], Second char = [0x0067, cid72], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, cid56], Second char = [0x0067, cid72], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, cid58], Second char = [0x0067, cid72], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, cid83], Second char = [0x0067, cid72], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, cid66], Second char = [0x0068, cid73], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, cid53], Second char = [0x006D, cid78], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, cid58], Second char = [0x006D, cid78], Kerning dist = -2)
    { 0x0061, -1 },  // (First char = [0x0061, cid66], Second char = [0x006D, cid78], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, cid44], Second char = [0x006E, cid79], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, cid53], Second char = [0x006E, cid79], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, cid58], Second char = [0x006E, cid79], Kerning dist = -2)
    { 0x0061, -1 },  // (First char = [0x0061, cid66], Second char = [0x006E, cid79], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, cid44], Second char = [0x006F, cid80], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, cid49], Second char = [0x006F, cid80], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, cid53], Second char = [0x006F, cid80], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, cid55], Second char = [0x006F, cid80], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, cid56], Second char = [0x006F, cid80], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, cid58], Second char = [0x006F, cid80], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, cid83], Second char = [0x006F, cid80], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, cid53], Second char = [0x0070, cid81], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, cid58], Second char = [0x0070, cid81], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, cid53], Second char = [0x0071, cid82], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, cid55], Second char = [0x0071, cid82], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, cid56], Second char = [0x0071, cid82], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, cid58], Second char = [0x0071, cid82], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, cid83], Second char = [0x0071, cid82], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, cid53], Second char = [0x0072, cid83], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, cid58], Second char = [0x0072, cid83], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, cid53], Second char = [0x0073, cid84], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, cid55], Second char = [0x0073, cid84], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, cid58], Second char = [0x0073, cid84], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, cid66], Second char = [0x0073, cid84], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, cid66], Second char = [0x0074, cid85], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, cid44], Second char = [0x0075, cid86], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, cid53], Second char = [0x0075, cid86], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, cid58], Second char = [0x0075, cid86], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, cid66], Second char = [0x0075, cid86], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, cid36], Second char = [0x0076, cid87], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, cid45], Second char = [0x0076, cid87], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, cid53], Second char = [0x0076, cid87], Kerning dist = -1)
    { 0x006C, -1 },  // (First char = [0x006C, cid77], Second char = [0x0076, cid87], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, cid36], Second char = [0x0077, cid88], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, cid44], Second char = [0x0077, cid88], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, cid45], Second char = [0x0077, cid88], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, cid53], Second char = [0x0077, cid88], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, cid53], Second char = [0x0078, cid89], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, cid36], Second char = [0x0079, cid90], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, cid45], Second char = [0x0079, cid90], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, cid53], Second char = [0x0079, cid90], Kerning dist = -3)
    { 0x006C, -1 },  // (First char = [0x006C, cid77], Second char = [0x0079, cid90], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, cid53], Second char = [0x007A, cid91], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, cid58], Second char = [0x007A, cid91], Kerning dist = -1)
};
